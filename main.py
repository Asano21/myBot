import telebot
import random
bot = telebot.TeleBot('5384813529:AAFF-OhjVqy0UpRYfE4RV9PuGFSWqNndVOE')

# howareyou = ['How are you?', 'how are you?', '–ö–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞?', "–ö–∞–∫ –¥–µ–ª–∞?", "–ö–∞–∫ –¥–µ–ª–∏—à–∫–∏?"]

@bot.message_handler(commands=['start'])
def start(message):
    stickHello = open('hi.webp', 'rb')
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    item3 = telebot.types.KeyboardButton('–ü—Ä–∏–≤–µ—Ç–∏–∫!üòä')
    item1 = telebot.types.KeyboardButton('–ö–∞–∫ –¥–µ–ª–∞? ‚ò∫Ô∏è')
    item2 = telebot.types.KeyboardButton('Random Numberüé≤')
    item4 = telebot.types.KeyboardButton('–ß–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è?üôÉ')
    markup.add(item3, item1, item2, item4)
    bot.send_sticker(message.chat.id, stickHello)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç–∏–∫ {0.first_name}'.format(message.from_user), parse_mode='html', reply_markup=markup)

@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, '''–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: 
1) /start
2) /help
–ü–∏—Å–∞—Ç—å —Å–ª–æ–≤–æ:
1) –ü—Ä–∏–≤–µ—Ç–∏–∫!üòä
2) –ö–∞–∫ –¥–µ–ª–∞? ‚ò∫Ô∏è
3) Random Numberüé≤
4)–ß–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è?üôÉ''')

@bot.message_handler(content_types=['text'])
def text(message):
    if message.chat.type == 'private':
        if message.text == '–ü—Ä–∏–≤–µ—Ç–∏–∫!üòä':
            bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç–∏–∫ {0.first_name}'.format(message.from_user))
        elif message.text == '–ö–∞–∫ –¥–µ–ª–∞? ‚ò∫Ô∏è':
            markup = telebot.types.InlineKeyboardMarkup(row_width=2)
            item1 = telebot.types.InlineKeyboardButton('–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ', callback_data='great')
            item2 = telebot.types.InlineKeyboardButton('–•–æ—Ä–æ—à–æ', callback_data='good')
            item3 = telebot.types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='notgood')
            item4 = telebot.types.InlineKeyboardButton("–ü–ª–æ—Ö–æ", callback_data='bad')
            item5 = telebot.types.InlineKeyboardButton('–õ—é–±–ª—é —Ç–µ–±—è :)', callback_data='loveyou')
            markup.add(item1, item2, item3, item4, item5)
            bot.send_message(message.chat.id, '–£ –º–µ–Ω—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ ‚ò∫Ô∏è. –ê —É —Ç–µ–±—è –∫–∞–∫?', reply_markup=markup)
            # stickHowareyou = open('howareyou.webp', 'rb')
            # bot.send_sticker(message.chat.id, stickHowareyou)
        elif message.text == '–ß–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è?üôÉ':
            randomNumber = random.randint(1, 5)
            # print(randomNumber)
            if randomNumber == 1:
                stick = open('lying.webp', 'rb')
                bot.send_sticker(message.chat.id, stick)
                bot.send_message(message.chat.id, '–î–∞, —Ç–∞–∫ –ª–µ–∂—É....')
            elif randomNumber == 2:
                stick = open('cardplay.webp', 'rb')
                bot.send_sticker(message.chat.id, stick)
                bot.send_message(message.chat.id, '–ò–≥—Ä–∞—é –∫–∞—Ä—Ç—É —Å –ø–æ–¥—Ä—É–≥–æ–π :)')
            elif randomNumber == 3:
                stick = open('angry.webp', 'rb')
                bot.send_sticker(message.chat.id, stick)
                bot.send_message(message.chat.id, '–£ –º–µ–Ω—è –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ....')
            elif randomNumber == 4:
                stick = open('sleeping.webp', 'rb')
                bot.send_sticker(message.chat.id, stick)
                bot.send_message(message.chat.id, '–°–ø–∞—Ç—å –æ—Ö–æ—Ç–∞ –∞–∞–∞—Ö...')
            elif randomNumber == 5:
                stick = open('cry.webp', 'rb')
                bot.send_sticker(message.chat.id, stick)
                bot.send_message(message.chat.id, '–ú–µ–Ω—è —Ä—É–≥–∞–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª–µ–π... :(')
        elif message.text == 'Random Numberüé≤':
            guessNumber = random.randint(0, 100)
            bot.send_message(message.chat.id, str(guessNumber))
            if 0 <= guessNumber < 30:
                bot.send_message(message.chat.id, '–•–ê–•–ê–•–ê, –¢—ã –Ω–µ—É–¥–∞—á–Ω–∏–∫!')
            elif 29 < guessNumber < 66:
                bot.send_message(message.chat.id, "–û—Ö —É —Ç–µ–±—è –ø–ª–æ—Ö–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —á–µ–º —è :)")
            elif 65 < guessNumber < 80:
                bot.send_message(message.chat.id, '–ú–º–ú–º–ú–º, –Ω–æ—Ä–º–∞–ª—å–Ω–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ')
            elif 79 < guessNumber <= 100:
                bot.send_message(message.chat.id, '–ß–µ—Ä—Ç! –¢–µ–±–µ –ø–æ–≤–µ–∑–ª–æ!')
        else:
            bot.send_message(message.chat.id, '–ü—Ä–æ—Å—Ç–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é :(. –ù–∞–ø–∏—à–∏ /help')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'great':
                stickOk = open('great.webp', 'rb')
                bot.send_sticker(call.message.chat.id, stickOk)
                bot.send_message(call.message.chat.id, '–Ø —Ä–∞–¥ :)')
            elif call.data == 'good':
                stickOk = open('verygood.webp', 'rb')
                bot.send_sticker(call.message.chat.id, stickOk)
                bot.send_message(call.message.chat.id, '–û—Ç–ª–∏—á–Ω–æ')
            elif call.data == 'notgood':
                stickOk = open('good.webp', 'rb')
                bot.send_sticker(call.message.chat.id, stickOk)
                bot.send_message(call.message.chat.id, '–ñ–∞–ª—å :(')
            elif call.data == 'bad':
                stickOk = open('boring.webp', 'rb')
                bot.send_sticker(call.message.chat.id, stickOk)
                bot.send_message(call.message.chat.id, '–ú–¥–∞–∞–∞–∞')
            elif call.data == 'loveyou':
                stickLove = open('love.webp', 'rb')
                bot.send_sticker(call.message.chat.id, stickLove)
                bot.send_message(call.message.chat.id, '–õ—é–±–ª—é —Ç–µ–±—èüíó')
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–£ –º–µ–Ω—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ ‚ò∫Ô∏è. –ê —É —Ç–µ–±—è –∫–∞–∫?', reply_markup=None)
            bot.answer_callback_query(call.message.chat.id, show_alert=False, text='This alert!')
    except Exception as e:
        print(repr(e))

bot.polling(none_stop=True)